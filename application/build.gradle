plugins {
    id("module-config")
    id("com.gorylenko.gradle-git-properties") version "2.4.1"
}

dependencies {
    implementation(project(":common"))

    implementation("org.springframework.cloud:spring-cloud-starter-openfeign:4.0.3")
    implementation("org.springframework.boot:spring-boot-starter-amqp")
    implementation("org.springframework.boot:spring-boot-starter-oauth2-resource-server")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

//    AZURE
    implementation 'com.azure.spring:spring-cloud-azure-starter-actuator:5.3.0'
    implementation 'com.azure.spring:spring-cloud-azure-starter-keyvault:5.7.0'
    implementation 'com.azure.spring:spring-cloud-azure-starter-active-directory:5.7.0'
    implementation 'com.azure.spring:spring-cloud-azure-starter:5.7.0'
}

gitProperties {
    extProperty = 'gitProps' // git properties will be put in a map at project.ext.gitProps
}


tasks.register('printGitProperties') {
    // make sure generateGitProperties task to execute before accessing generated properties
    doLast {
        println "git.commit.id.abbrev=" + project.ext.gitProps['git.commit.id.abbrev']
    }
}

generateGitProperties.outputs.upToDateWhen { false }
// make sure the generateGitProperties task always executes (even when git.properties is not changed)


tasks.register('logEnv') {
    println "IMAGE_USERNAME=" + System.getenv("IMAGE_USERNAME")
    println "IMAGE_PASSWORD=" + System.getenv("IMAGE_PASSWORD")
}

bootBuildImage {
    builder = "paketobuildpacks/builder-jammy-base:latest"
    imageName = "9122206ceb4b4bb3902aa8a9c146e9f0.azurecr.io/airene-backend"
    tags = ["9122206ceb4b4bb3902aa8a9c146e9f0.azurecr.io/airene-backend:${-> project.ext.gitProps['git.commit.id.abbrev']}"]
    publish = true
    docker {
        publishRegistry {
            username = System.getenv("IMAGE_USERNAME")
            password = System.getenv("IMAGE_PASSWORD")
        }
    }
}
