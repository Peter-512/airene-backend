include:
    - template: Security/Dependency-Scanning.gitlab-ci.yml
    - template: Security/Secret-Detection.gitlab-ci.yml
    - template: Jobs/SAST.gitlab-ci.yml


variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""


image: docker:latest
services:
    - docker:dind


cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
        - build
        - .gradle


stages:
    - build
    - test
    - deploy


build:
    image: gradle:8.4.0-jdk21
    stage: build
    only:
        - main
    script:
        - gradle clean bootBuildImage


test:
    image: gradle:8.4.0-jdk21
    stage: test
    script:
        - gradle test
    artifacts:
        when: always
        reports:
            junit: ./build/test-results/test/**/TEST-*.xml


deploy:
    image: mcr.microsoft.com/azure-cli
    stage: deploy
    only:
        - main
    before_script:
        - az login --service-principal -u $PRINCIPAL_AZURE_APP_ID -p $PRINCIPAL_AZURE_PASSWORD --tenant $PRINCIPAL_AZURE_TENANT
        - az extension add --name containerapp --upgrade
    script:
        - tag=$CI_COMMIT_REF_NAME
        - az containerapp up --name airene-backend --resource-group int5 --location westeurope --environment prod --target-port 8080 --ingress external --image "$IMAGE_USERNAME.azurecr.io/airene-backend:latest"
        - az containerapp update --name airene-backend --resource-group int5 --cpu 1 --memory 2Gi --min-replicas 0 --max-replicas 1 --set-env-vars 
            AZURE_ENTRA_CLIENT_ID=$AZURE_ENTRA_CLIENT_ID
            AZURE_ENTRA_APP_ID_URI=$AZURE_ENTRA_APP_ID_URI
            AZURE_SERVICEBUS_NAMESPACE=$AZURE_SERVICEBUS_NAMESPACE
            AZURE_SERVICEBUS_CONNECTION_STRING=$AZURE_SERVICEBUS_CONNECTION_STRING
            AZURE_SQL_DB_USERNAME=$AZURE_SQL_DB_USERNAME
            AZURE_SQL_DB_PASSWORD=$AZURE_SQL_DB_PASSWORD
            AZURE_SQL_DB_URL=$AZURE_SQL_DB_URL
            SPRING_PROFILES_ACTIVE=prod
