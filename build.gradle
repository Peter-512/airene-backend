plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id("com.gorylenko.gradle-git-properties") version "2.4.1"
    id("org.owasp.dependencycheck") version "8.4.2"
    id "org.sonarqube" version "3.5.0.2730"
}

group = 'be.kdg'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudAzureVersion', "5.7.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // EMAIL
    implementation("com.azure:azure-communication-email:1.0.9")

    // SPRING SECURITY
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // SPRING DATA
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")

    // AZURE
    implementation("com.azure.spring:spring-cloud-azure-dependencies:5.7.0")
    implementation("com.azure.spring:spring-cloud-azure-autoconfigure:5.7.0")
    implementation("com.azure.spring:spring-cloud-azure-starter-integration-servicebus:5.7.0")
    implementation("com.azure.spring:spring-cloud-azure-starter-jdbc-mysql:5.7.0")
    implementation("com.azure.spring:spring-cloud-azure-starter-actuator:5.7.0")
    implementation 'com.azure.spring:spring-cloud-azure-starter-keyvault:5.7.0'
    implementation 'com.azure.spring:spring-cloud-azure-starter:5.7.0'

    // DEV TOOLS
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'


    // MAPSTRUCT
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // DEV ENV
    implementation 'mysql:mysql-connector-java:8.0.33'

    // TESTING
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.tngtech.archunit:archunit-junit5:1.1.0'
    testImplementation "org.testcontainers:junit-jupiter:1.19.1"
    testImplementation "org.testcontainers:azure:1.19.3"
    testImplementation group: 'org.testcontainers', name: 'mysql', version: '1.19.1'

    constraints {
        implementation("ch.qos.logback:logback-core:1.4.14") {
            because 'CVE-2023-6481'
        }

        implementation("ch.qos.logback:logback-classic:1.4.14") {
            because 'CVE-2023-6378'
        }

        implementation("io.projectreactor.netty:reactor-netty-http:1.1.14"){
            because 'CVE-2023-34062'
        }

        implementation("org.apache.tomcat.embed:tomcat-embed-core:11.0.0-M15"){
            because 'CVE-2023-46589'
        }

        implementation("com.fasterxml.jackson.core:jackson-databind:2.16.0"){
            because 'CVE-2023-35116'
        }
    }

}

dependencyManagement {
    imports {
        mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
    }
}

gitProperties {
    extProperty = 'gitProps' // git properties will be put in a map at project.ext.gitProps
}


tasks.register('printGitProperties') {
    // make sure generateGitProperties task to execute before accessing generated properties
    doLast {
        println "git.commit.id.abbrev=" + project.ext.gitProps['git.commit.id.abbrev']
    }
}

generateGitProperties.outputs.upToDateWhen { false }
// make sure the generateGitProperties task always executes (even when git.properties is not changed)


springBoot {
    buildInfo()
}


dependencyCheck {
    suppressionFile = rootProject.file('suppression.xml')
    analyzers {
        assemblyEnabled = false
    }
    formats = [ "HTML", "XML" ]
}


bootBuildImage {
    builder = "paketobuildpacks/builder-jammy-base:latest"
    imageName = String.format("%s.azurecr.io/airene-backend", System.getenv("IMAGE_USERNAME"))
    tags = ["9122206ceb4b4bb3902aa8a9c146e9f0.azurecr.io/airene-backend:${-> project.ext.gitProps['git.commit.id.abbrev']}"]
    publish = true
    docker {
        publishRegistry {
            username = System.getenv("IMAGE_USERNAME")
            password = System.getenv("IMAGE_PASSWORD")
        }
    }
}

tasks.build.dependsOn bootBuildImage
tasks.bootBuildImage.dependsOn generateGitProperties

tasks.named('test') {
    useJUnitPlatform()
}
